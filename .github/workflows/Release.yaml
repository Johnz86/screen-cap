name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        build_target: [
          { target: "x86_64-unknown-linux-gnu", os: "linux" },
          { target: "x86_64-pc-windows-msvc", os: "windows" }
        ]

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.build_target.target }}

      - name: Install Visual Studio Build Tools
        if: matrix.build_target.os == 'windows'
        uses: microsoft/setup-msbuild@v2

      - name: Install Linux dependencies
        if: matrix.build_target.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev pkg-config

      - name: Build
        run: cargo build --release --target ${{ matrix.build_target.target }}

      - name: Strip binaries (Linux)
        if: matrix.build_target.os == 'linux'
        run: strip target/${{ matrix.build_target.target }}/release/screen-cap

      - name: Compress binaries (Linux)
        if: matrix.build_target.os == 'linux'
        run: tar -czvf screen-cap-linux-amd64.tar.gz target/${{ matrix.build_target.target }}/release/screen-cap

      - name: Compress binaries (Windows)
        if: matrix.build_target.os == 'windows'
        run: zip screen-cap-windows-amd64.zip target/${{ matrix.build_target.target }}/release/screen-cap.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false

      - name: Upload Release Assets (Linux)
        if: matrix.build_target.os == 'linux'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: screen-cap-linux-amd64.tar.gz
          asset_name: screen-cap-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Assets (Windows)
        if: matrix.build_target.os == 'windows'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: screen-cap-windows-amd64.zip
          asset_name: screen-cap-windows-amd64.zip
          asset_content_type: application/zip