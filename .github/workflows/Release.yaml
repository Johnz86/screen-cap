name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libxcb1-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Strip binaries
        run: strip target/x86_64-unknown-linux-gnu/release/screen-cap

      - name: Compress binaries
        run: tar -czvf screen-cap-linux-amd64.tar.gz target/x86_64-unknown-linux-gnu/release/screen-cap

      - name: Upload Release Assets (Linux)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: screen-cap-linux-amd64.tar.gz
          asset_name: screen-cap-linux-amd64.tar.gz
          asset_content_type: application/gzip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v2

      - name: Install zip
        run: choco install zip -y

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Compress binaries
        run: zip screen-cap-windows-amd64.zip target/x86_64-pc-windows-msvc/release/screen-cap.exe

      - name: Upload Release Assets (Windows)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: screen-cap-windows-amd64.zip
          asset_name: screen-cap-windows-amd64.zip
          asset_content_type: application/zip

  create_release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false